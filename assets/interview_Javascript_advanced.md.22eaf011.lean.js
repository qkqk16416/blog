import{_ as a,v as e,b as t,R as i}from"./chunks/framework.5b8b640e.js";const v=JSON.parse('{"title":"","description":"","frontmatter":{"0":"t","1":"i","2":"t","3":"l","4":"e","5":" ","6":"J","7":"a","8":"v","9":"a","10":"s","11":"c","12":"r","13":"i","14":"p","15":"t","16":" ","17":"进","18":"阶"},"headers":[],"relativePath":"interview/Javascript/advanced.md","filePath":"interview/Javascript/advanced.md"}'),r={name:"interview/Javascript/advanced.md"},d=i('<h2 id="_1-2-3-map-parseint-what-why" tabindex="-1">[&#39;1&#39;, &#39;2&#39;, &#39;3&#39;].map(parseInt) what &amp; why ? <a class="header-anchor" href="#_1-2-3-map-parseint-what-why" aria-label="Permalink to &quot;[&#39;1&#39;, &#39;2&#39;, &#39;3&#39;].map(parseInt) what &amp; why ?&quot;">​</a></h2><p>先说答案： <code>[1, NaN, NaN]</code></p><ol><li><p>首先， <code>map()</code> 的 <code>callback</code> 接受三个参数，<code>currentValue</code> 当前值， <code>index</code> 索引， 以及 <code>array</code> 数组本身。</p></li><li><p><code>parseInt(string, radix)</code> 接受两个参数，<code>radix</code> 表示为解析时的基数。</p></li><li><p>所以，三次调用分别为：</p></li></ol><ul><li>parseInt(&#39;1&#39;, 0) // radix为0时，且string参数不以“0x”和“0”开头时，按照10为基数处理。这个时候返回1</li><li>parseInt(&#39;2&#39;, 1) // 基数为1（1进制）表示的数中，最大值小于2，所以无法解析，返回NaN</li><li>parseInt(&#39;3&#39;, 2) //基数为2（2进制）表示的数中，最大值小于3，所以无法解析，返回NaN</li></ul><ol start="4"><li>所以，最终返回 <code>[1, NaN, NaN]</code></li></ol><h2 id="" tabindex="-1"><a class="header-anchor" href="#" aria-label="Permalink to &quot;&quot;">​</a></h2>',6),o=[d];function c(s,n,l,p,h,m){return e(),t("div",null,o)}const u=a(r,[["render",c]]);export{v as __pageData,u as default};
